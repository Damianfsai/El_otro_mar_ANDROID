<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Realidad Aumentada Video</title>
  <!-- Incluir A-Frame y AR.js -->
  <script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
  <script src="https://cdn.rawgit.com/jeromeetienne/ar.js/1.7.7/aframe/build/aframe-ar.js"></script>
  <style>
    body, html { margin: 0; padding: 0; overflow: hidden; }
  </style>
</head>
<body>
  <!-- Escena de AR con marcador "hiro" -->
  <a-scene embedded arjs="sourceType: webcam; debugUIEnabled: false;">
    <a-marker preset="hiro">
      <a-video 
        src="#videoAR" 
        position="0 0.5 0" 
        rotation="-90 0 0" 
        width="1" 
        height="0.5"
        autoplay>
      </a-video>
    </a-marker>
    <input type="button" value="Say hello" onClick="showCamera('Android! Start Camera')" />

<script type="text/javascript">
    function showCamera(toast) {
        Android.showCamera(toast);
    }
</script>
  </a-scene>

  <!-- Video oculto para la reproducción en AR -->
  <video id="videoAR" src="https://drive.google.com/file/d/1jaOo4M3B5wprPomc1H6hBKRKdygAcwYw/view?usp=drivesdk" autoplay loop style="display: none;"></video>

  <script>
    // Función para verificar permisos de la cámara
    async function checkCameraPermissions() {
      try {
        // Solicitamos acceso a la cámara
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        console.log("Acceso a la cámara concedido");
        // Si el acceso es exitoso, detenemos el stream para que AR.js lo tome
        stream.getTracks().forEach(track => track.stop());
      } catch (error) {
        console.error("Error al acceder a la cámara:", error.name, error.message);
        handleCameraError(error);
      }
    }

    // Función para manejar errores específicos de la cámara
    function handleCameraError(error) {
      switch (error.name) {
        case 'NotAllowedError':
        case 'PermissionDeniedError':
          alert("El acceso a la cámara ha sido denegado. Revisa los permisos de la cámara en el navegador.");
          break;
        case 'NotFoundError':
          alert("No se ha encontrado una cámara en el dispositivo.");
          break;
        case 'NotReadableError':
          alert("No se puede acceder a la cámara. Está siendo usada por otra aplicación.");
          break;
        default:
          alert("Error desconocido al intentar acceder a la cámara: " + error.message);
      }
    }

    // Verificar si la página está en HTTPS y ejecutar la verificación de cámara
    if (window.location.protocol !== 'https:') {
      console.warn("Es recomendable usar HTTPS para evitar problemas de permisos con la cámara.");
      alert("Advertencia: se recomienda usar HTTPS para garantizar el acceso correcto a la cámara.");
    }

    // Ejecutar la verificación de permisos de la cámara
    checkCameraPermissions();
  </script>
</body>
</html>
